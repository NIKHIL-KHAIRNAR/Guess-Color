
<style>
	body {
	background-color: #232323;
	margin: 0;
	font-family: "Montserrat", "Avenir"
}

.square {
	width: 30%;
	background: purple;
	padding-bottom: 30%;
	float: left;
	margin: 1.66%;
	border-radius: 15%;
	transition: background 0.6s;
	-webkit-transition: background 0.6s;
	-moz-transition: background 0.6s;
}

#container {
	max-width: 600px;
	margin: 20px auto;
}

h1 {
	color: white;
	text-align: center;
	background: steelblue;
	margin: 0;
	font-weight: normal;
	text-transform: uppercase;
	line-height: 1.1;
	padding: 20px 0;
}

#message {
	display: inline-block;
	width: 20%;
}

#stripe {
	background: white;
	height: 30px;
	text-align: center;
}

.selected {
	color: white;
	background: steelblue;
}

#colorDisplay {
	display: block;
	font-size: 200%
}

button {
	border: none;
	background: none;
	text-transform: uppercase;
	height: 100%;
	font-weight: 700;
	color: steelblue;
	letter-spacing: 1px;
	font-size: inherit;
	transition: all 0.3s;
	-webkit-transition: all 0.3s;
	-moz-transition: all 0.3s;
	outline: none;
}

button:hover {
	color: white;
	background: steelblue;
}



</style>
<h1>Guess <span id="colorDisplay"></span> the  Color {{ output }}</h1>

<div id="stripe">
	<button id="reset">play</button>
	<span id="message"></span>

</div>

<div id="container">
	<div class="square"></div>
	<div class="square"></div>
	<div class="square"></div>
	<div class="square"></div>
	<div class="square"></div>
	<div class="square"></div>
	<div class="square"></div>
	<div class="square"></div>
	<div class="square"></div>
	<div class="square"></div>
</div>

<script >

var numSquares = 10
var colors = []
var pickedColor
var gameState =0;

var Score =0;
var squares = document.querySelectorAll(".square")
var colorDisplay = document.getElementById("colorDisplay")
var messageDisplay = document.getElementById("message")
var h1 = document.querySelector("h1")
var resetBtn = document.querySelector("#reset")
var modeBtns = document.querySelectorAll(".mode")



init()

resetBtn.addEventListener("click", function() {
	reset()

})



function init() {


	setupSquares();

	reset()
}




function setupSquares() {

	for(var i =0; i < squares.length; i++) {

		//add click listener to square
		squares[i].addEventListener("click", function() {
			//grab color selected square
			var clickedColor = this.style.backgroundColor

			//compare color to pickedColor

			//condition to restrict number of levels
			if(gameState>=6){
				resetBtn.textContent = "Play Again"
				gameState=-1;   // gameState is set to -1 if level>=6
			
			}
			//checking condition
			if(clickedColor === pickedColor) {
				messageDisplay.textContent = "Correct!"
				if(gameState < 6 ){
					resetBtn.textContent = "Next Level";
					
				}
				gameState= gameState +1;  // increment the gameState

				
				if(gameState == 0){
					resetBtn.textContent = "Play Again!";
					messageDisplay.textContent =   "{{ output }} your Score is " +Score;
				
					Score=0;
				}
				Score = Score +1;
			
				changeColors(clickedColor)
				h1.style.backgroundColor = clickedColor
			} else {
				this.style.backgroundColor = "#232323"
				messageDisplay.textContent = "Try Again"
			   // for wrong clickedColor decrementing the Score
				Score = Score -1; 
			}

		})
		
	}	
}

function reset() {

	colors = generateRandomColors(numSquares)
	pickedColor = pickColor() ;

	
	
	resetBtn.textContent = "Play"
	messageDisplay.textContent = ""


	for(var i =0; i < squares.length; i++) {
		//add initial colors to squares
		if(colors[i]) {
			squares[i].style.display = "block"
			squares[i].style.backgroundColor = colors[i]
		} else {
			squares[i].style.display = "none"
		}
	}
	// h1.style.backgroundColor = "#232323"
	h1.style.backgroundColor = "steelblue"
}

function changeColors(color) {
	for(var i = 0; i < squares.length; i++) {
		squares[i].style.backgroundColor = color
	}
}
// to pick color according to Fibonacci series
function series(n){

		if(n<=2){
			return 1;
		} else {
			return this.series(n-1) + this.series(n-2)
		}
}
function pickColor() {
	
	console.log("game state in pick color function"+ gameState);

	var random = series(gameState)-1;
	return colors[random]
	
}

function generateRandomColors(num) {
	//make an array
	var arr = []

	//add num random colors to array
	for(var i = 0; i < num; i++) {
		arr.push(randomColor())
	}
	
	//return array
	return arr
}

function randomColor() {
	//pick a "red" from 0 - 255
	var r = Math.floor(Math.random() * 256)
	//pick a "green" from 0 - 255
	var g = Math.floor(Math.random() * 256)
	//pick a "blue" from 0 - 255
	var b = Math.floor(Math.random() * 256)

	return "rgb(" + r + ", " + g + ", " + b + ")"
}





</script>
